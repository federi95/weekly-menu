generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model Account {
  id        Int      @id @default(autoincrement())
  email     String?
  password  String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  User      User?

  @@map(name: "accounts")
}

model User {
  id        Int      @id @default(autoincrement())
  account   Account  @relation(fields: [accountId], references: [id])
  accountId Int      @unique @map("account_id")
  name      String?
  role      Role     @default(USER)
  config    Json?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  Meal      Meal[]

  @@map(name: "users")
}

model Meal {
  id        Int      @id @default(autoincrement())
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int      @map("user_id")
  type      MealType @relation(fields: [typeId], references: [id])
  typeId    Int      @map("type_id")
  eaten     Boolean? @default(false)
  notes     String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  Recipe    Recipe[]

  @@map(name: "meals")
}

model MealType {
  id           Int      @id @default(autoincrement())
  title        String?
  color        String?
  timeInterval String?  @map("time_interval")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  Meal         Meal[]

  @@map(name: "meal_types")
}

model Ingredient {
  id               Int                @id @default(autoincrement())
  title            String?
  description      String?
  createdAt        DateTime           @default(now()) @map("created_at")
  updatedAt        DateTime           @updatedAt @map("updated_at")
  RecipeIngredient RecipeIngredient[]

  @@map(name: "ingredients")
}

model Recipe {
  id               Int                @id @default(autoincrement())
  meal             Meal               @relation(fields: [mealId], references: [id])
  mealId           Int                @map("meal_id")
  instructions     String?
  createdAt        DateTime           @default(now()) @map("created_at")
  updatedAt        DateTime           @updatedAt @map("updated_at")
  RecipeIngredient RecipeIngredient[]

  @@map(name: "recipes")
}

model RecipeIngredient {
  id           Int         @id @default(autoincrement())
  recipe       Recipe      @relation(fields: [recipeId], references: [id])
  recipeId     Int         @map("recipe_id")
  ingredient   Ingredient? @relation(fields: [ingredientId], references: [id])
  ingredientId Int?        @map("ingredient_id")
  amount       Float?
  unit         String?

  @@map(name: "recipe_ingredients")
}
